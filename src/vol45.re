= @<href>{https://www.ruby-lang.org/,www.ruby-lang.org} リニューアルと日本語コンテンツメンテナンスご協力のお願い

先日、@<href>{https://www.ruby-lang.org/,www.ruby-lang.org} のリニューアルが行われた。
これは Ruby アソシエーションから「サイトデザインの募集について」という
アナウンスがあったことから、ご存知の方もいるだろう。

 * @<href>{http://www.ruby.or.jp/ja/news/20130924.html,サイトデザインの募集について}

今回のサイトデザイン変更においては、単純に見え方の変更というだけではなく、
スマートフォン等など PC ブラウザ以外からの閲覧が多くなっている現状、
そういった端末環境への対応が望まれていた。

新デザインの反映は、ちょうど RubyWorld Conference 2013 開催中の 11/22 に行われた。
採用されたのは @<href>{https://github.com/jzimdars,Jason Zimdars(jzimdars)} によるデザインである。
@<href>{http://jasonzimdars.com/portfolio/,彼のポートフォリオのページ} によれば、Ruby on Rails Guides の
サイトデザインも彼によるものだそうで、納得の結果であったと言えるだろう。

さて、サイトデザインが変わり、レスポンシブになったことは素晴らしい改善であるが、
実はもう一つ長年にわたる大きな課題がある。日本語のページのメンテナンスの問題である。

当然ながら最初の Ruby のホームページは日本語の方がより活発に更新されていたのだが、
現在では英語版のコンテンツの方が充実が進み、
日本語版の方は古いコンテンツがそのまま残っていたり、
新しいものが追加されなくなっているものも少なくない。もっとも、これは Ruby の情報に関して、
そもそも日本語で流通しているものが多く、公式サイトによらずとも多くの情報が得られる、
という事情も影響しているのだろう。とはいえ、やはり何も知らない人が頼りとするのは
まず公式サイトであるべきであり、また実際にそうする方も少なくないだろう。
可能であれば充実したサイトであるに越したことはない。

こちらについては、サイトデザインリニューアルとは異なり、
誰か一人の手によるものというよりも、
より多くの方々に参加・協力していただける方が理想的であるし、またそうでなければ持続が難しい。
しかも、以前は Radiant という CMS を使った更新体制であったため、
なかなか新規にサイト更新権限を得ることが容易ではなかったのだが、
現在は github で管理されるようになり、
github のアカウントがあれば誰でも簡単にコンテンツ更新の提案ができるようになっている。

というわけで、ここでざっくりではあるが、
@<href>{https://www.ruby-lang.org/,www.ruby-lang.org} のコンテンツの更新方法について紹介してみたい。

== 今日からできる @<href>{https://www.ruby-lang.org/,www.ruby-lang.org} の手伝い方

細かいことを挙げていけばいくつもあるだろうが、
主だったところとしては以下の 4 点がある。

 * すでにある日本語のページの誤り・問題点を修正する
 * まだ訳されていない英語等の記事を日本語に翻訳する
 * 日本語のニュースを書く
 * 日本語の新しいページを作る

おそらく最初の 2 つ辺りが簡単だろう。
あるいは、3 番目の「ニュース」の登録については、
もし掲載したい情報があればそれを行ってみるのも早いかもしれない。
英語力には自信がないけれど載せたい情報がある人には向いている。

== 必要な準備

まずどうしても必要なこととして、

 * github のアカウント作成

がある。こればかりはアカウントがないと何も始まらないので、適宜検索等を駆使して github のアカウント登録方法を調べて実行しておいていただきたい。

さらに余力があれば、@<href>{https://www.ruby-lang.org/,www.ruby-lang.org} の表示をローカルで試せるようにしておきたい。
これは以下の手順で行う。

まず、Ruby をインストールする。これも説明の必要はないだろう。

次に、もし Bundler をインストールしていなければ、ここでインストールしておく。

//emlist[][]{
  $ gem install bundler
//}

そして、@<href>{https://www.ruby-lang.org/,www.ruby-lang.org} のコンテンツを格納するための適当なディレクトリを作り、そこに移動する。ここでは「wro」というディレクトリ名にしておこう。

//emlist[][]{
  $ mkdir wro
  $ cd wro
//}

ここで、github から @<href>{https://www.ruby-lang.org/,www.ruby-lang.org} 編集用のレポジトリを取得する。

//emlist[][]{
  $ git clone https://github.com/ruby/www.ruby-lang.org.git
//}

こうすると www.ruby-lang.org というディレクトリができるので、そこに移動する。

//emlist[][]{
  $ cd www.ruby-lang.org/
//}

そして Bundler で必要な Gems をインストールする。

//emlist[][]{
  $ bundle install
//}

そして rake コマンドでサーバを実行する。

//emlist[][]{
  $ bundle exec rake preview
//}

ここまで問題なく実行できた場合、 http://localhost:4000/ にアクセスすると、
www.ruby-lang.org が手元で表示できることになる。無事表示できただろうか。

もし、ここまでに何か問題が起きてしまって、preview 画面まで辿りつけない場合でも、あきらめることはない。
とりあえず記事を編集して Pull Request を行って、細かい確認作業は誰か他のコントリビュータに期待する、
という方法もとれなくはない (下記の Wiki ページにも「Quick Way」として紹介されているのはこちらの方法である)。
とはいえ、その場合誰も直してくれずにそのまま放置されてしまう可能性もありうるので、
そうなるとせっかくの作業がもったいない。
可能であれば上記の手順に従ってローカルでも確認できる環境を用意しておきたい。

== 記事の作成・修正方法

さて記事の作成・修正方法である。こちらは以下のページを読んでおいて欲しい。

 * https://github.com/ruby/www.ruby-lang.org/wiki

github 上での作業であるため、記事の修正や追加もふつうに pull request を送ることになる。
github を使っている方であれば pull request のやり方について改めて説明する必要も
ないとは思うが、pull request についてまったく知らない、という方は、こちらもネットで検索して
調べておいて欲しい。

github で日本語のコンテンツは下記 URL にある。

 * https://github.com/ruby/www.ruby-lang.org/tree/master/ja

ニュースの記事であれば、さらにその下の news/_posts/ 以下になる。

 * https://github.com/ruby/www.ruby-lang.org/tree/master/ja/news/_posts

ここに過去のファイルが全て並んでいる。

上記のローカルで閲覧環境を作っている方であれば、 www.ruby-lang.org/ja/news/_posts ディレクトリの
下にあるファイルがそれに該当する。

このファイルの中から、日付をたよりに変更したいファイルを探す。
そのファイルがあれば、中身を確認してみよう。Markdown でコンテンツが記載されているはずだ。
Markdown といっても特に複雑な記法を使っている記事はそう多くはないので、
他のファイルをいくつか比べてみればその記法もおおよそ分かるだろう。

新しくファイルを作りたい場合は、「日付-URL につかうタイトル名 (英語表記、ハイフン区切り).md」といった
命名規則で新しくファイルを作り、以下のような情報を冒頭に埋める。

//emlist[][]{
  ---
  layout: news_post
  title: (表題)
  author: (書いた人のアカウント名)
  translator: (翻訳した人のアカウント名)
  date: (タイムスタンプ(UTC))
  lang: ja
  ---
//}

あとは本文を記述していく。こちらも Markdown である。

このようにして作成・変更したファイルを、ふつうに git のコマンドを使って commit・自分のレポジトリへの push を行い、元のリポジトリに対して pull request を送ればよい。

なお、pull request に使う言語は英語である。もっとも、記事の内容を見てくれるのは日本語の分かる人がいる (はずな) ので、なんとなくそれっぽい pull request になっていればあとは何とかしてくれるだろう。


以上、簡単ながら @<href>{https://www.ruby-lang.org/,www.ruby-lang.org} の編集に参加する流れを説明してみた。
これをきっかけに、より多くの方々が @<href>{https://www.ruby-lang.org/,www.ruby-lang.org} のコンテンツのメンテナンスに参加されることになればうれしい限りである。多くの方の参加を心より期待したい。
